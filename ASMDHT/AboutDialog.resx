<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAAB4CAYAAAA5ZDbSAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAAd0SU1FB98KHgQfJs2UH+gAAARgSURBVHhe7dyxbiRFEAbghRwJwSXwFCSItyDh
        JSBEQiLnDZB4FUggQOIFCMkQpJxI8RnfLjV3s3vtf3+ve3ury7U/9UufdKqZqenq9lleB9505H3zufnB
        /Gb+MbvyZP41f5ifzdfmQzOUd8135tawF5Uc7sxyTu+Y7nxq/jKsYcnpT/OReTRfmuWrgjUpuf1tPjYP
        5ivDHizXY/nO+4E5yvJtuf7navjJvG0Oec88N+zmcp0+M4d8a9hN5Xr9at4ym2emPgpp+sRsvmgKRcs3
        ZvN9UyhafjGvfv3ILpbr97up3y0LuzH0QtFBi0UHLRYdtBhls9vt5DXzPgVaDIEboQrnDkaLIXAjVOHc
        wWgxBG6EKpw7GC2GwI1QhXMHo8UQuBGqcO5gtBgCN0IVzh2MFkPgRqjCuYPRYgjcCFU4dzBaDIEboQrn
        DkaLIXAjVOHcwWgxBG6EKpw7GC2GwI1QhXMHo8UQuBGqcO5gtBgCN0IVzh2MFkPgRqjCuYPRYgjcCFU4
        dzBaDIEboQrnDkaLIXAjVOHcwWgxBG6EKpzbU0d/Wgyx3wB1OLeXpv+So+srWgyxX6A6nNtL5ztoMUS7
        QGU4t5fOd9BiiHaBynBuL53voMUQ7QKV4dxeOt9BiyHaBSrDub10voMWQ7QLVIZze2n6Lzm6vqLFEPsF
        qsO5PXX0p8UQ+w1Qh3MHo8UQuBGqcO5gtBgCN0IVzh2MFkPgRqjCuYPRYtFBi0UHLRYdtFh00GLRQYtF
        By0WHbRYdNBi0UGLRcfmxyKtUqlUKpXKU2RXkU4dsHjqgMVTByyeOmDx1AGLpw5YPHXA4qkDFk8dsHg8
        Dnjpcc/27m7/78oT59JDOBzqCZW+TNmzS5q1C3pM5VS222l7NtoIF3Pa6wEqD+d4z5wy1Gj74gUupscl
        Yf0y8Mq03qONcDE9RsN6ZeKRWX2HG+FieoyG9crEKzN6DjdrF9NrNKxXJqkzukAcssdoWK9MurO9uRl5
        9s39L1/2PnPI2Q+sefPSfqNhvTLpDXt28XDIx6f1i6Q7Z90MuffiR1wS1i+T3rBnF6fC7l9056ybSfDF
        zKVhPTPpCvn2vHcq7P5Fd866meWRz8QeYX0zOScjz448c8jZDzxBcMBsUif9Ai24odm4ZHt7+7rfwE/K
        p+LabFL2G5mVR2b19Ws0MTh4Nh6Z1dev0cTg4Nl4ZFZfv0YTg4Nn45FZff0aTQwOno1LDh8364esdFIn
        /QItuKHZpI7nAmcN3fbNKHU8Fzhr6LZvRqnjucBZQ7d9M0odzwXOGrrtm1HqeC5w1tBt34xSZ3SBOGSP
        0bBemaTO6AJxyB6jYb0ySZ3RBeKQPUbDemWSOp4LnDV02zej1PFc4Myh296ZpI/nIq9q8P9L6oDFUwcs
        njoM8dQBi6cOWDx1wOKpAxZP/dV38dQBC+fV4e6z1ioiWY/1ftZrFYGsR3qc9XrlirMe5cNZ76tcWdbj
        68v6TOVKsh4bZLP5D0dg/yZXtyEeAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="infoBox.Text" xml:space="preserve">
    <value>ASMDHT (Another SMDH Tool) v1.1
Copyright © 2015 Anthony Lomeli
Licensed under The MIT License

A simple tool for my own personal use to create and edit SMDH files.

SMDH reading and writing from SMDH Creator by GEMESIS</value>
  </data>
</root>